'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _constants = require('./constants');

var _state = require('./state');

var _state2 = _interopRequireDefault(_state);

var _game = require('./game');

var _Board = require('./Board');

var _Board2 = _interopRequireDefault(_Board);

var _Scores = require('./Scores');

var _Scores2 = _interopRequireDefault(_Scores);

var _AllFood = require('./AllFood');

var _AllFood2 = _interopRequireDefault(_AllFood);

var _Monster = require('./Monster');

var _Monster2 = _interopRequireDefault(_Monster);

var _Player = require('./Player');

var _Player2 = _interopRequireDefault(_Player);

require('./style.scss');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Pacman = function (_Component) {
    _inherits(Pacman, _Component);

    function Pacman(props) {
        _classCallCheck(this, Pacman);

        var _this = _possibleConstructorReturn(this, (Pacman.__proto__ || Object.getPrototypeOf(Pacman)).call(this, props));

        _this.state = (0, _state2.default)();

        _this.onKey = function (evt) {
            if (evt.key === 'ArrowRight') {
                return _this.changeDirection(_constants.EAST);
            }
            if (evt.key === 'ArrowUp') {
                return _this.changeDirection(_constants.NORTH);
            }
            if (evt.key === 'ArrowLeft') {
                return _this.changeDirection(_constants.WEST);
            }
            if (evt.key === 'ArrowDown') {
                return _this.changeDirection(_constants.SOUTH);
            }

            return null;
        };

        _this.timers = {
            start: null,
            animate: null
        };
        return _this;
    }

    _createClass(Pacman, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            window.addEventListener('keydown', this.onKey);

            this.timers.start = setTimeout(function () {
                _this2.setState({ stepTime: Date.now() });

                _this2.step();
            }, 3000);
        }
    }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
            window.removeEventListener('keydown', this.onKey);

            clearTimeout(this.timers.start);
            clearTimeout(this.timers.animate);
        }
    }, {
        key: 'step',
        value: function step() {
            var _this3 = this;

            var result = (0, _game.animate)(this.state);

            this.setState(result);

            clearTimeout(this.timers.animate);
            this.timers.animate = setTimeout(function () {
                return _this3.step();
            }, 20);
        }
    }, {
        key: 'changeDirection',
        value: function changeDirection(direction) {
            this.setState((0, _game.changeDirection)(this.state, { direction: direction }));
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                onEnd = _props.onEnd,
                otherProps = _objectWithoutProperties(_props, ['onEnd']);

            var props = _extends({ gridSize: 12 }, otherProps);

            var monsters = this.state.monsters.map(function (_ref) {
                var id = _ref.id,
                    monster = _objectWithoutProperties(_ref, ['id']);

                return _react2.default.createElement(_Monster2.default, _extends({ key: id }, props, monster));
            });

            return _react2.default.createElement(
                'div',
                { className: 'pacman' },
                _react2.default.createElement(_Board2.default, props),
                _react2.default.createElement(_Scores2.default, { score: this.state.score, lost: this.state.lost }),
                _react2.default.createElement(_AllFood2.default, _extends({}, props, { food: this.state.food })),
                monsters,
                _react2.default.createElement(_Player2.default, _extends({}, props, this.state.player, { lost: this.state.lost, onEnd: onEnd }))
            );
        }
    }]);

    return Pacman;
}(_react.Component);

exports.default = Pacman;


Pacman.propTypes = {
    gridSize: _propTypes2.default.number.isRequired,
    onEnd: _propTypes2.default.func
};